# -*- mode: ruby -*-
# vi: set ft=ruby :

# Docker CVE-2019-5736 PoC

# Check Vagrant version requirement
Vagrant.require_version ">= 1.8.4"

# :: ::
subject_ip = "192.168.99.2"

# :: memory setting ::
vmmemory = 512 # Memory for VM
numcpu = 1 # Number of CPU

# :: Proxy Configuration ::
http_proxy = ""
no_proxy = "localhost,127.0.0.1,#{subject_ip}"

# :: plugin installation checker ::
if not http_proxy.to_s.strip.empty?
	required_plugins = %w( vagrant-proxyconf )
	plugins_to_install = required_plugins.select { |plugin| not Vagrant.has_plugin? plugin }
	if not plugins_to_install.empty?
    	puts "Installing plugins: #{plugins_to_install.join(' ')}"
    	if system "vagrant plugin install #{plugins_to_install.join(' ')}"
        	exec "vagrant #{ARGV.join(' ')}"
    	else
        	abort "Installation of one or more plugins has failed. Aborting."
    	end
	end
end



# :: configure vm ::
Vagrant.configure("2") do |config|
  config.vm.provider "virtualbox" do |v|
    v.memory = vmmemory
    v.cpus = numcpu
  end

  # congfigure "subject" vm
  config.vm.define "subject" do |i|
    i.vm.box = "ubuntu/trusty64"
    i.vm.hostname = "subject"
    i.vm.network "private_network", ip: "#{subject_ip}"
    # Proxy Setup, but I don't use it.
    # Leave it for the future.
    if not http_proxy.to_s.strip.empty?
      i.proxy.http     = http_proxy
      i.proxy.https    = https_proxy
      i.proxy.no_proxy = no_proxy
    end

    i.vm.provision "shell", path: "./provision.sh"

    if File.file?("./docker-cve-2019-5736")
      i.vm.provision "file", source: "docker-cve-2019-5736", destination: "/tmp/docker-cve-2019-5736"
    end
    # provision shell script will install vulnerable docker-ce
    i.vm.provision "shell", path: "./provision.sh"
      if File.file?("./hosts") 
        i.vm.provision "file", source: "hosts", destination: "/tmp/hosts"
        i.vm.provision "shell", inline: "cat /tmp/hosts >> /etc/hosts", privileged: true
    end
  end
end